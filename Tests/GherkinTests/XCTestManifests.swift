#if !canImport(ObjectiveC)
    import XCTest

    extension GherkinFeatureTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__GherkinFeatureTests = [
            ("testFeatureShouldFailIfScenarioOutlineHasNoExamples", testFeatureShouldFailIfScenarioOutlineHasNoExamples),
            ("testScenarioBadRegex", testScenarioBadRegex),
            ("testScenarioShouldBeCaseInsensitive", testScenarioShouldBeCaseInsensitive),
            ("testScenarioShouldExist", testScenarioShouldExist),
            ("testScenarioShouldNotExist", testScenarioShouldNotExist),
        ]
    }

    extension GherkinScenarioTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__GherkinScenarioTests = [
            ("testScenarioOutlineHasName", testScenarioOutlineHasName),
            ("testSimpleScenarioHasNoExamples", testSimpleScenarioHasNoExamples),
            ("testSimpleScenarioIsNotCorrectShouldThrowError", testSimpleScenarioIsNotCorrectShouldThrowError),
            ("testStepBadRegex", testStepBadRegex),
            ("testStepShouldBeCaseInsensitive", testStepShouldBeCaseInsensitive),
            ("testStepShouldExist", testStepShouldExist),
            ("testStepShouldNotExist", testStepShouldNotExist),
        ]
    }

    extension SwiftGherkinTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__SwiftGherkinTests = [
            ("testCreatingAFeatureInCode", testCreatingAFeatureInCode),
            ("testLoadShouldFailWhenFeaturePathIsNotCorrect", testLoadShouldFailWhenFeaturePathIsNotCorrect),
            ("testLoadShouldFailWithBadData", testLoadShouldFailWithBadData),
            ("testLoadShouldSucceed", testLoadShouldSucceed),
            ("testLoadShouldSuccessWithData", testLoadShouldSuccessWithData),
            ("testParsingFeatureFileWithDescription", testParsingFeatureFileWithDescription),
            ("testParsingFeatureFileWithMultiLineDescription", testParsingFeatureFileWithMultiLineDescription),
            ("testParsingFeatureFileWithMultipleScenarios", testParsingFeatureFileWithMultipleScenarios),
            ("testParsingFeatureFileWithScenarioDescription", testParsingFeatureFileWithScenarioDescription),
            ("testParsingSimpleFeatureFile", testParsingSimpleFeatureFile),
            ("testParsingSimpleFeatureFileWithIndentation", testParsingSimpleFeatureFileWithIndentation),
            ("testParsingSimpleFeatureFileWithMultipleTags", testParsingSimpleFeatureFileWithMultipleTags),
            ("testParsingSimpleFeatureFileWithMultipleTagsBeforeFeature", testParsingSimpleFeatureFileWithMultipleTagsBeforeFeature),
            ("testParsingSimpleFeatureFileWithMultipleVariable", testParsingSimpleFeatureFileWithMultipleVariable),
            ("testParsingSimpleFeatureFileWithMultipleVariableAndTag", testParsingSimpleFeatureFileWithMultipleVariableAndTag),
            ("testParsingSimpleFeatureFileWithMultipleVariableAndTagBeforeFeature", testParsingSimpleFeatureFileWithMultipleVariableAndTagBeforeFeature),
            ("testParsingSimpleFeatureFileWithMultipleVariableAndTags", testParsingSimpleFeatureFileWithMultipleVariableAndTags),
            ("testParsingSimpleFeatureFileWithMultipleVariableAndTagsBeforeFeature", testParsingSimpleFeatureFileWithMultipleVariableAndTagsBeforeFeature),
            ("testParsingSimpleFeatureFileWithTag", testParsingSimpleFeatureFileWithTag),
            ("testParsingSimpleFeatureFileWithTagBeforeFeature", testParsingSimpleFeatureFileWithTagBeforeFeature),
            ("testParsingSimpleFeatureFileWithTagsBeforeFeatureAndBeforeScenario", testParsingSimpleFeatureFileWithTagsBeforeFeatureAndBeforeScenario),
            ("testParsingSimpleFeatureFileWithVariable", testParsingSimpleFeatureFileWithVariable),
            ("testParsingSimpleFeatureFileWithVariableWithIndentation", testParsingSimpleFeatureFileWithVariableWithIndentation),
        ]
    }

    public func __allTests() -> [XCTestCaseEntry] {
        [
            testCase(GherkinFeatureTests.__allTests__GherkinFeatureTests),
            testCase(GherkinScenarioTests.__allTests__GherkinScenarioTests),
            testCase(SwiftGherkinTests.__allTests__SwiftGherkinTests),
        ]
    }
#endif
