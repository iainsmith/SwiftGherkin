#if !canImport(ObjectiveC)
import XCTest

extension GherkinAndTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinAndTests = [
        ("testAndMethodShouldExist", testAndMethodShouldExist),
        ("testAndMethodShouldFindSpecificString", testAndMethodShouldFindSpecificString),
        ("testAndMethodShouldNotFindSpecificStepIfNotAnd", testAndMethodShouldNotFindSpecificStepIfNotAnd),
        ("testAndMethodShouldNotFindSpecificString", testAndMethodShouldNotFindSpecificString),
    ]
}

extension GherkinButTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinButTests = [
        ("testButMethodShouldExist", testButMethodShouldExist),
        ("testButMethodShouldFindSpecificString", testButMethodShouldFindSpecificString),
        ("testButMethodShouldNotFindSpecificStepIfNotBut", testButMethodShouldNotFindSpecificStepIfNotBut),
        ("testButMethodShouldNotFindSpecificString", testButMethodShouldNotFindSpecificString),
    ]
}

extension GherkinFeatureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinFeatureTests = [
        ("testFeatureShouldFailIfScenarioOutlineHasNoExamples", testFeatureShouldFailIfScenarioOutlineHasNoExamples),
        ("testScenarioBadRegex", testScenarioBadRegex),
        ("testScenarioShouldBeCaseInsensitive", testScenarioShouldBeCaseInsensitive),
        ("testScenarioShouldExist", testScenarioShouldExist),
        ("testScenarioShouldNotExist", testScenarioShouldNotExist),
    ]
}

extension GherkinGivenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinGivenTests = [
        ("testGivenMethodShouldExist", testGivenMethodShouldExist),
        ("testGivenMethodShouldFindGivenAndExample", testGivenMethodShouldFindGivenAndExample),
        ("testGivenMethodShouldFindSpecificRegex", testGivenMethodShouldFindSpecificRegex),
        ("testGivenMethodShouldFindSpecificString", testGivenMethodShouldFindSpecificString),
        ("testGivenMethodShouldNotFindSpecificStepIfNotARegex", testGivenMethodShouldNotFindSpecificStepIfNotARegex),
        ("testGivenMethodShouldNotFindSpecificStepIfNotGiven", testGivenMethodShouldNotFindSpecificStepIfNotGiven),
        ("testGivenMethodShouldNotFindSpecificString", testGivenMethodShouldNotFindSpecificString),
    ]
}

extension GherkinLoadFeatureTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinLoadFeatureTests = [
        ("testLoadShouldFailWhenFeaturePathIsNotCorrect", testLoadShouldFailWhenFeaturePathIsNotCorrect),
        ("testLoadShouldSucceed", testLoadShouldSucceed),
    ]
}

extension GherkinScenarioTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinScenarioTests = [
        ("testScenarioOutlineHasName", testScenarioOutlineHasName),
        ("testSimpleScenarioHasNoExamples", testSimpleScenarioHasNoExamples),
        ("testStepBadRegex", testStepBadRegex),
        ("testStepShouldBeCaseInsensitive", testStepShouldBeCaseInsensitive),
        ("testStepShouldExist", testStepShouldExist),
        ("testStepShouldNotExist", testStepShouldNotExist),
    ]
}

extension GherkinSearchErrorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinSearchErrorTests = [
        ("testEquatable", testEquatable),
        ("testNotEquatable", testNotEquatable),
    ]
}

extension GherkinThenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinThenTests = [
        ("testThenMethodShouldExist", testThenMethodShouldExist),
        ("testThenMethodShouldFindSpecificString", testThenMethodShouldFindSpecificString),
        ("testThenMethodShouldNotFindSpecificStepIfNotThen", testThenMethodShouldNotFindSpecificStepIfNotThen),
        ("testThenMethodShouldNotFindSpecificString", testThenMethodShouldNotFindSpecificString),
    ]
}

extension GherkinWhenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GherkinWhenTests = [
        ("testWhenMethodShouldExist", testWhenMethodShouldExist),
        ("testWhenMethodShouldFindSpecificString", testWhenMethodShouldFindSpecificString),
        ("testWhenMethodShouldNotFindSpecificStepIfNotWhen", testWhenMethodShouldNotFindSpecificStepIfNotWhen),
        ("testWhenMethodShouldNotFindSpecificString", testWhenMethodShouldNotFindSpecificString),
    ]
}

extension SwiftGherkinTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftGherkinTests = [
        ("testCreatingAFeatureInCode", testCreatingAFeatureInCode),
        ("testParsingFeatureFileWithDescription", testParsingFeatureFileWithDescription),
        ("testParsingFeatureFileWithMultiLineDescription", testParsingFeatureFileWithMultiLineDescription),
        ("testParsingFeatureFileWithMultipleScenarios", testParsingFeatureFileWithMultipleScenarios),
        ("testParsingFeatureFileWithScenarioDescription", testParsingFeatureFileWithScenarioDescription),
        ("testParsingSimpleFeatureFile", testParsingSimpleFeatureFile),
        ("testParsingSimpleFeatureFileWithIndentation", testParsingSimpleFeatureFileWithIndentation),
        ("testParsingSimpleFeatureFileWithMultipleTags", testParsingSimpleFeatureFileWithMultipleTags),
        ("testParsingSimpleFeatureFileWithMultipleVariable", testParsingSimpleFeatureFileWithMultipleVariable),
        ("testParsingSimpleFeatureFileWithMultipleVariableAndTag", testParsingSimpleFeatureFileWithMultipleVariableAndTag),
        ("testParsingSimpleFeatureFileWithMultipleVariableAndTags", testParsingSimpleFeatureFileWithMultipleVariableAndTags),
        ("testParsingSimpleFeatureFileWithTag", testParsingSimpleFeatureFileWithTag),
        ("testParsingSimpleFeatureFileWithVariable", testParsingSimpleFeatureFileWithVariable),
        ("testParsingSimpleFeatureFileWithVariableWithIndentation", testParsingSimpleFeatureFileWithVariableWithIndentation),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(GherkinAndTests.__allTests__GherkinAndTests),
        testCase(GherkinButTests.__allTests__GherkinButTests),
        testCase(GherkinFeatureTests.__allTests__GherkinFeatureTests),
        testCase(GherkinGivenTests.__allTests__GherkinGivenTests),
        testCase(GherkinLoadFeatureTests.__allTests__GherkinLoadFeatureTests),
        testCase(GherkinScenarioTests.__allTests__GherkinScenarioTests),
        testCase(GherkinSearchErrorTests.__allTests__GherkinSearchErrorTests),
        testCase(GherkinThenTests.__allTests__GherkinThenTests),
        testCase(GherkinWhenTests.__allTests__GherkinWhenTests),
        testCase(SwiftGherkinTests.__allTests__SwiftGherkinTests),
    ]
}
#endif
